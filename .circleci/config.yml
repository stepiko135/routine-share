# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.3-fpm-node
      - image: circleci/mysql:8.0
      # 8.0のため認証方法変更
        command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - APP_ENV: testing
      - APP_KEY: base64:zxw/GdSneGon9gQMk/2Yp3utI/iaZbD8iUAW6ysuI6w=
      - DB_CONNECTION: circleci
      - APP_DEBUG: true
      - MYSQL_ALLOW_EMPTY_PASSWORD: true


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run: sudo apt update
      - run: sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install pdo_mysql

      - run:
          working_directory: src
          name: Install GD library
          # 参照元　https://github.com/docker-library/php/issues/750
          command: sudo apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng-dev && sudo -E docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && sudo docker-php-ext-install -j$(nproc) gd

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "src/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          working_directory: src
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "src/package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "src/package.json" }}
          paths:
            - node_modules

      - run:
          name: MySQL起動まで待機
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      - run:
          name: マイグレーションとシーディング
          working_directory: src
          command: php artisan migrate --seed

      - run:
          name: PHPUnitテスト
          working_directory: src
          command: ./vendor/bin/phpunit

